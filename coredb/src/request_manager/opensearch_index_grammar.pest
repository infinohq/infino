/// PEG grammar for indexing requests

start = { ws ~ (index_creation | document) ~ ws }

// Index Creation with Settings, Mappings, and Templates
index_creation     = {
    "{" ~ ws ~ (settings_section ~ "," ~ ws)? ~ "mappings" ~ ":" ~ ws ~ mappings ~ ("," ~ ws ~ templates_section)? ~ ws ~ "}"
}
settings_section   = { "settings" ~ ":" ~ ws ~ "{" ~ ws ~ (setting_pair ~ ("," ~ ws ~ setting_pair)*)? ~ ws ~ "}" }
setting_pair       = { string ~ ":" ~ ws ~ setting_value }
templates_section  = { "templates" ~ ":" ~ ws ~ "{" ~ ws ~ (template_mapping ~ ("," ~ ws ~ template_mapping)*)? ~ ws ~ "}" }
template_mapping   = { string ~ ":" ~ ws ~ "{" ~ ws ~ (template_attribute ~ ("," ~ ws ~ template_attribute)*)? ~ ws ~ "}" }
template_attribute = { string ~ ":" ~ ws ~ attribute_value }

// Mappings and Field Definitions
mappings        = { "{" ~ ws ~ (field_mapping ~ ("," ~ ws ~ field_mapping)*)? ~ ws ~ "}" }
field_mapping   = { string ~ ":" ~ ws ~ "{" ~ ws ~ (field_attribute ~ ("," ~ ws ~ field_attribute)*)? ~ ws ~ "}" }
field_attribute = { string ~ ":" ~ ws ~ attribute_value }

// Document Insertion
document = { "{" ~ ws ~ (pair ~ ("," ~ ws ~ pair)*)? ~ ws ~ "}" }
pair     = { string ~ ":" ~ ws ~ value }

// Value Types
value         = { string | number | object | array | boolean | "null" }
object        = { "{" ~ ws ~ (pair ~ ("," ~ ws ~ pair)*)? ~ ws ~ "}" }
array         = { "[" ~ ws ~ (value ~ ("," ~ ws ~ value)*)? ~ ws ~ "]" }
setting_value = { string | number | boolean | object | array | multi_field }

// Advanced Field Attributes and Analyzer Definitions
attribute_value     = { string | number | boolean | object | array | analyzer_definition | field_type | multi_field }
analyzer_definition = { "custom" ~ "{" ~ ws ~ (analyzer_attribute ~ ("," ~ ws ~ analyzer_attribute)*)? ~ ws ~ "}" }
analyzer_attribute  = { string ~ ":" ~ ws ~ (string | object) }
field_type          = { "text" | "keyword" | "date" | "long" | "double" | "boolean" | "nested" | "geo_point" | "geo_shape" | "ip" | "completion" | "object" }
multi_field         = { "fields" ~ "{" ~ ws ~ (field_mapping ~ ("," ~ ws ~ field_mapping)*)? ~ ws ~ "}" }

// Basic Types
string  = { "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
number  = { "-"? ~ INT ~ ("." ~ INT)? ~ (EXPONENT)? }
boolean = { "true" | "false" }

// Helpers
INT      = _{ ASCII_DIGIT+ }
EXPONENT = _{ ("e" | "E") ~ ("+" | "-")? ~ ASCII_DIGIT+ }
ws       = _{ " " | "\t" | "\n" | "\r" }
